{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "initials": {
         "type": "string",
         "metadata": {
            "description": "Your initials (so for Koos van Strien that would be KvS)"
         }
      }
   },
   "variables": {
      "uniqueString": "[concat(substring(uniqueString(resourceGroup().id), 0, 3), toLower(parameters('initials')))]",
      "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
      "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
      "serverName": "[concat('sql-',variables('uniqueString'))]",
      "sourceDBName": "sqldb-source",
      "targetDBName": "sqldb-target",
      "location": "[resourceGroup().location]",
      "administratorLogin": "sqladmin",
      "administratorLoginPassword": "WortellSmartLearning.nl",
      "storageAccountName": "[concat('st',variables('uniqueString'))]",
      "containerName": "data",
      "dataFactoryName": "[concat('adf-',variables('uniqueString'))]",
      "linkedDataFactoryName": "[concat('adf-linked-',variables('uniqueString'))]",
      "keyVaultName": "[concat('kv-',variables('uniqueString'))]",
      "virtualMachineName": "[concat('vm-',variables('uniqueString'))]",
      "networkInterfaceName": "[concat('nic-',variables('uniqueString'))]",
      "virtualNetworkName": "[concat('vnet-',variables('uniqueString'))]",
      "networkSecurityGroupName": "[concat('nsg-',variables('uniqueString'))]",
      "subnetName": "subnet",
      "publicIpAddressName": "[concat('pip-',variables('uniqueString'))]",
      "roleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c"
   },
   "resources": [
      {
         "type": "Microsoft.Sql/servers",
         "apiVersion": "2020-02-02-preview",
         "name": "[variables('serverName')]",
         "location": "[variables('location')]",
         "properties": {
            "administratorLogin": "[variables('administratorLogin')]",
            "administratorLoginPassword": "[variables('administratorLoginPassword')]"
         },
         "resources": [
            {
               "type": "databases",
               "apiVersion": "2020-08-01-preview",
               "name": "[variables('sourceDBName')]",
               "location": "[variables('location')]",
               "properties": {
                  "sampleName": "AdventureWorksLT"
               },
               "sku": {
                  "name": "Standard",
                  "tier": "Standard"
               },
               "dependsOn": [
                  "[resourceId('Microsoft.Sql/servers', concat(variables('serverName')))]"
               ]
            },
            {
               "type": "databases",
               "apiVersion": "2020-08-01-preview",
               "name": "[variables('targetDBName')]",
               "location": "[variables('location')]",
               "properties": {},
               "sku": {
                  "name": "Standard",
                  "tier": "Standard"
               },
               "dependsOn": [
                  "[resourceId('Microsoft.Sql/servers', concat(variables('serverName')))]"
               ]
            }
         ]
      },
      {
         "type": "Microsoft.Sql/servers/firewallRules",
         "apiVersion": "2021-02-01-preview",
         "name": "[concat(variables('serverName'), '/AllowAllIps')]",
         "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
         ],
         "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "255.255.255.255"
         }
      },
      {
         "type": "Microsoft.Storage/storageAccounts",
         "apiVersion": "2021-04-01",
         "name": "[variables('storageAccountName')]",
         "location": "[variables('location')]",
         "sku": {
            "name": "Standard_LRS"
         },
         "kind": "StorageV2",
         "properties": {
            "accessTier": "Hot"
         }
      },
      {
         "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion": "2021-04-01",
         "name": "[format('{0}/default/{1}', variables('storageAccountName'), variables('containerName'))]",
         "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
         ]
      },
      {
         "type": "Microsoft.DataFactory/factories",
         "apiVersion": "2018-06-01",
         "name": "[variables('dataFactoryName')]",
         "location": "[variables('location')]",
         "properties": {},
         "identity": {
            "type": "SystemAssigned"
         }
      },
      {
         "type": "Microsoft.DataFactory/factories",
         "apiVersion": "2018-06-01",
         "name": "[variables('linkedDataFactoryName')]",
         "location": "[variables('location')]",
         "properties": {},
         "identity": {
            "type": "SystemAssigned"
         }
      },
      {
         "type": "Microsoft.Resources/deploymentScripts",
         "apiVersion": "2020-10-01",
         "kind": "AzurePowerShell",
         "name": "WaitSection",
         "location": "[variables('location')]",
         "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
            "[resourceId('Microsoft.DataFactory/factories', variables('linkedDataFactoryName'))]"
         ],
         "properties": {
            "azPowerShellVersion": "3.0",
            "scriptContent": "start-sleep -Seconds 30",
            "cleanupPreference": "Always",
            "retentionInterval": "PT1H"
         }
      },
      {
         "type": "Microsoft.Authorization/roleAssignments",
         "apiVersion": "2020-04-01-preview",
         "name": "[guid(variables('roleDefinitionId'))]",
         "scope": "[concat('Microsoft.DataFactory/factories', '/', variables('linkedDataFactoryName'))]",
         "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
            "[resourceId('Microsoft.DataFactory/factories', variables('linkedDataFactoryName'))]",
            "WaitSection"
         ],
         "properties": {
            "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionId'))]",
            "principalId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')),'2018-06-01', 'full').identity.principalId]"
         }
      },
      {
         "type": "Microsoft.KeyVault/vaults",
         "apiVersion": "2021-04-01-preview",
         "name": "[variables('keyVaultName')]",
         "location": "[variables('location')]",
         "dependsOn": [
            "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
            "[resourceId('Microsoft.DataFactory/factories', variables('linkedDataFactoryName'))]",
            "WaitSection"
         ],
         "properties": {
            "tenantId": "[subscription().tenantId]",
            "enableSoftDelete": false,
            "accessPolicies": [
               {
                  "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')),'2018-06-01', 'full').identity.principalId]",
                  "tenantId": "[subscription().tenantId]",
                  "permissions": {
                     "secrets": [
                        "list",
                        "get"
                     ]
                  }
               },
               {
                  "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('linkedDataFactoryName')),'2018-06-01', 'full').identity.principalId]",
                  "tenantId": "[subscription().tenantId]",
                  "permissions": {
                     "secrets": [
                        "list",
                        "get"
                     ]
                  }
               }
            ],
            "sku": {
               "name": "standard",
               "family": "A"
            },
            "networkAcls": {
               "defaultAction": "Allow",
               "bypass": "AzureServices"
            }
         }
      },
      {
         "type": "Microsoft.KeyVault/vaults/secrets",
         "apiVersion": "2021-04-01-preview",
         "name": "[format('{0}/{1}', variables('keyVaultName'), variables('administratorLogin'))]",
         "properties": {
            "value": "[variables('administratorLoginPassword')]"
         },
         "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
         ]
      },
      {
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2020-11-01",
         "name": "[variables('networkInterfaceName')]",
         "location": "[variables('location')]",
         "properties": {
            "ipConfigurations": [
               {
                  "name": "ipconfig1",
                  "properties": {
                     "privateIPAddress": "10.0.0.4",
                     "privateIPAllocationMethod": "Dynamic",
                     "publicIPAddress": {
                        "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                     },
                     "subnet": {
                        "id": "[variables('subnetRef')]"
                     },
                     "primary": true,
                     "privateIPAddressVersion": "IPv4"
                  }
               }
            ],
            "dnsSettings": {
               "dnsServers": []
            },
            "enableAcceleratedNetworking": true,
            "enableIPForwarding": false,
            "networkSecurityGroup": {
               "id": "[variables('nsgId')]"
            }
         },
         "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
         ]
      },
      {
         "name": "[variables('networkSecurityGroupName')]",
         "type": "Microsoft.Network/networkSecurityGroups",
         "apiVersion": "2019-02-01",
         "location": "[variables('location')]",
         "properties": {
            "securityRules": [
               {
                  "name": "RDP",
                  "properties": {
                     "protocol": "TCP",
                     "sourcePortRange": "*",
                     "destinationPortRange": "3389",
                     "sourceAddressPrefix": "*",
                     "destinationAddressPrefix": "*",
                     "access": "Allow",
                     "priority": 300,
                     "direction": "Inbound",
                     "sourcePortRanges": [],
                     "destinationPortRanges": [],
                     "sourceAddressPrefixes": [],
                     "destinationAddressPrefixes": []
                  }
               }
            ]
         }
      },
      {
         "name": "[variables('virtualNetworkName')]",
         "type": "Microsoft.Network/virtualNetworks",
         "apiVersion": "2020-11-01",
         "location": "[variables('location')]",
         "properties": {
            "addressSpace": {
               "addressPrefixes": [
                  "10.0.0.0/16"
               ]
            },
            "subnets": [
               {
                  "name": "[variables('subnetName')]",
                  "properties": {
                     "addressPrefix": "10.0.0.0/24",
                     "delegations": [],
                     "privateEndpointNetworkPolicies": "Enabled",
                     "privateLinkServiceNetworkPolicies": "Enabled"
                  }
               }
            ],
            "virtualNetworkPeerings": [],
            "enableDdosProtection": false
         }
      },
      {
         "name": "[variables('publicIpAddressName')]",
         "type": "Microsoft.Network/publicIpAddresses",
         "apiVersion": "2019-02-01",
         "location": "[variables('location')]",
         "properties": {
            "publicIPAllocationMethod": "Static",
            "publicIPAddressVersion": "IPv4"
         },
         "sku": {
            "name": "Standard"
         }
      },
      {
         "name": "[variables('virtualMachineName')]",
         "type": "Microsoft.Compute/virtualMachines",
         "apiVersion": "2021-03-01",
         "location": "[variables('location')]",
         "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
         ],
         "properties": {
            "hardwareProfile": {
               "vmSize": "Standard_D2s_v3"
            },
            "storageProfile": {
               "osDisk": {
                  "createOption": "fromImage",
                  "managedDisk": {
                     "storageAccountType": "StandardSSD_LRS"
                  }
               },
               "imageReference": {
                  "publisher": "MicrosoftWindowsDesktop",
                  "offer": "Windows-10",
                  "sku": "20h2-pro-g2",
                  "version": "latest"
               }
            },
            "networkProfile": {
               "networkInterfaces": [
                  {
                     "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                  }
               ]
            },
            "osProfile": {
               "computerName": "os-vm",
               "adminUsername": "[variables('administratorLogin')]",
               "adminPassword": "[variables('administratorLoginPassword')]",
               "windowsConfiguration": {
                  "enableAutomaticUpdates": true,
                  "provisionVmAgent": true
               }
            },
            "licenseType": "Windows_Client",
            "diagnosticsProfile": {
               "bootDiagnostics": {
                  "enabled": true
               }
            }
         },
         "identity": {
            "type": "systemAssigned"
         }

      },
      {
         "name": "[concat('shutdown-computevm-', variables('virtualMachineName'))]",
         "type": "Microsoft.DevTestLab/schedules",
         "apiVersion": "2018-09-15",
         "location": "[variables('location')]",
         "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
         ],
         "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
               "time": "1800"
            },
            "timeZoneId": "W. Europe Standard Time",
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
         }
      },
      {
         "type": "Microsoft.Consumption/budgets",
         "apiVersion": "2021-10-01",
         "name": "[concat('budget-', toLower(parameters('initials')))]",
         "scope": "[resourceGroup().id]",
         "properties": {
            "amount": 50,
            "category": "Cost",
            "timeGrain": "Monthly",
            "notifications": {
               "NotificationFor50%": {
                  "enabled": true,
                  "operator": "GreaterThan",
                  "threshold": 50,
                  "contactEmails": [
                     "koos.van.strien@wortell.nl",
                     "smartlearning@wortell.nl"
                  ]
               },
               "NotificationFor75%": {
                  "enabled": true,
                  "operator": "GreaterThan",
                  "threshold": 75,
                  "contactEmails": [
                     "koos.van.strien@wortell.nl",
                     "smartlearning@wortell.nl"
                  ]
               },
               "NotificationFor100%": {
                  "enabled": true,
                  "operator": "GreaterThan",
                  "threshold": 100,
                  "contactEmails": [
                     "koos.van.strien@wortell.nl",
                     "smartlearning@wortell.nl"
                  ]
               }
            }
         }
      }
   ]
}